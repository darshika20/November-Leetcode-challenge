/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 *
 *@author: Darshika
 *@Question Link: https://leetcode.com/problems/sum-of-left-leaves/
 *@Time Complexity: O(n)
 *@Space Complexity: O(1)
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        return helper(root,"mid");
    }
    
    private int helper(TreeNode root,String status){
        if(root == null){
            return 0;
        }
        if(root.left == null && root.right == null){
            if(status.equals("left")){
                return root.val;
            }
            return 0;
        }
        int left = helper(root.left,"left");
        int right = helper(root.right,"right");
        return left+right;
    }
}
