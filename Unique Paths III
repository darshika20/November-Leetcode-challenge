/*
@author : Darshika
@Question Link : https://leetcode.com/problems/unique-paths-iii/
@Time Complexity : O(4^(mn))
@Space Complexity : O(mn)
*/

class Solution {
    public int uniquePathsIII(int[][] grid) {
        
        //count all empty squares to walk - 0
        
        int zeros = 0;
        int startrow = -1;
        int startcol = -1;
        int endrow = -1;
        int endcol = -1;
        for(int i =0;i<grid.length;i++){
            for(int j = 0;j<grid[0].length;j++){
                if(grid[i][j] == 0){
                    zeros++;
                }else if(grid[i][j] == 1){
                    startrow = i;
                    startcol = j;
                }else if(grid[i][j] == 2){
                    endrow = i;
                    endcol = j;
                }
            }
        }
        
       // System.out.println(zeros);
        
        //perform dfs to reach 2 from 1 and count that way if the no of steps = no of 0s                
        return dfs(grid,startrow,startcol,endrow,endcol,zeros,new boolean[grid.length][grid[0].length],0);
        
    }
    
    private int dfs(int[][] grid,int startrow,int startcol,int endrow,int endcol,int zeros,boolean[][] visited,int csf){
        
        if(startrow < 0 || startrow >= grid.length || startcol < 0 || startcol >= grid[0].length || grid[startrow][startcol] == -1 || visited[startrow][startcol] == true){
            return 0;
        }
        
        if(startrow == endrow && startcol == endcol){
            //System.out.println(csf);
            if(csf == zeros+1){
                return 1;
            }else{
                return 0;
            }
        }
        
        visited[startrow][startcol] = true;
        
        int res = dfs(grid,startrow+1,startcol,endrow,endcol,zeros,visited,csf+1)+dfs(grid,startrow-1,startcol,endrow,endcol,zeros,visited,csf+1)+dfs(grid,startrow,startcol+1,endrow,endcol,zeros,visited,csf+1)+dfs(grid,startrow,startcol-1,endrow,endcol,zeros,visited,csf+1);
        
        visited[startrow][startcol] = false;
        
        return res;
    }
}
